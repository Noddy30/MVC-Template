name: ASP.NET Core CI/CD

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      MYSQL_SERVER: ${{ secrets.MYSQL_SERVER }}
      MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_PRIVATE_KEY_NO_PASS: ${{ secrets.SSH_PRIVATE_KEY_NO_PASS }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Publish application
      run: dotnet publish -c Release -o ./build-output

    - name: Create build output directory
      run: mkdir -p ./build-output

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-output
        path: ./build-output

    - name: List build output
      run: ls -R ./build-output

    - name: Set up SSH key for deployment
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY_NO_PASS" > ~/.ssh/id_rsa_no_pass
        chmod 600 ~/.ssh/id_rsa_no_pass
        ssh-keyscan -t ed25519 -p 22 165.0.4.88 >> ~/.ssh/known_hosts

    - name: Check SSH Connection to Raspberry Pi
      run: |
        ssh -v -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa_no_pass -p 22 spuismys@165.0.4.88 echo "SSH connection successful"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-output
        path: ./build-output

    - name: Check build output directory
      run: |
        if [ ! -d "./build-output" ] || [ -z "$(ls -A ./build-output)" ]; then
          echo "Build output directory does not exist or is empty."
          exit 1
        fi

    - name: List build output
      run: ls -R ./build-output

    - name: Transfer and Deploy Application
      run: |
        scp -r -i ~/.ssh/id_rsa_no_pass -P 22 ./build-output/* spuismys@165.0.4.88:/tmp/
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa_no_pass -p 22 spuismys@165.0.4.88 "\
          sudo mkdir -p /var/www/html && \
          sudo tar -zxf /tmp/build-output.tar.gz -C /var/www/html && \
          sudo rm /tmp/build-output.tar.gz \
        "

    - name: Clean up temporary files on local machine
      run: rm -rf ./build-output
