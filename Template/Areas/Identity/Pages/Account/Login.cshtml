
@page
@using Microsoft.Extensions.Configuration
@model LoginRegisterModel
@inject IConfiguration Configuration
@{
    Layout = "/Areas/Identity/Pages/Account/_Layout.cshtml";
}

@{
    var regex = @"[!@#$%^&*(),.?"":{}|<>]";
}
@{
    ViewData["Title"] = "Log in";

    ViewData["ActiveTab"] = "Login";
}
@{
    var activeTab = ViewData["ActiveTab"] as string;
    string IsActiveTab(string tab) => activeTab == tab ? "active" : null;
}

<selection class="forms-section">
    <h1 class="section-title">Welcome, Login or Register</h1>
    <div class="forms">
        <div class="form-wrapper is-active">
            <button class="switcher switcher-login">
                Login
                <span class="underline"></span>
            </button>
            <form class="form form-login needs-validation" id="login-form" method="post" novalidate>
                <fieldset>
                    <legend>Please, enter your email and password for login.</legend>
                    <div class="input-block">
                        <label class="form-label" asp-for="Login.Email">Email address</label>
                        <input class="form-control" asp-for="Login.Email" autocomplete="username" placeholder="Email Address" autofocus required>
                        <span asp-validation-for="Login.Email" class="text-danger"></span>
                    </div>
                    <div class="input-block">
                        <label class="form-label">
                            Password
                        </label>
                        <div class="input-group">
                            <input asp-for="Login.Password" autocomplete="current-password" class="form-control" placeholder="Password" required>
                            <button type="button" class="input-group-text" id="eye">
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-eye"><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle></svg>
                            </button>
                        </div>
                        <span asp-validation-for="Login.Password" class="text-danger"></span>
                    </div>
                </fieldset>
                <button type="submit" class="btn-login">Login</button>
            </form>
        </div>


        <div class="form-wrapper">
            <button type="button" class="switcher switcher-signup">
                Sign Up
                <span class="underline"></span>
            </button>
            <form class="form form-signup needs-validation" id="signup-form" method="post" novalidate>
                <fieldset>
                    <legend>Please, enter your email, password and password confirmation for sign up.</legend>
                    <div class="input-block">
                        <label class="form-label" asp-for="Register.Email">Email address</label>
                        <input class="form-control" asp-for="Register.Email" autocomplete="username" placeholder="Email Address" autofocus required>
                        <span asp-validation-for="Register.Email" class="text-danger"></span>
                    </div>
                    <div class="input-block">
                        <label class="form-label">Confirm Password</label>
                        <div class="input-group">
                            <input asp-for="Register.Password" autocomplete="current-password" class="form-control" placeholder="Password" required>
                            <button type="button" class="input-group-text" id="eye2">
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-eye"><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle></svg>
                            </button>
                        </div>
                        <span asp-validation-for="Register.Password" class="text-danger"></span>

                    </div>
                    <div class="input-block">
                        <label class="form-label">Confirm Password</label>
                        <div class="input-group">
                            <input asp-for="Register.ConfirmPassword" autocomplete="current-password" class="form-control" placeholder="Confirm Password" required>
                            <button type="button" class="input-group-text" id="eye3">
                                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-eye"><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle></svg>
                            </button>
                        </div>
                        <span asp-validation-for="Register.ConfirmPassword" class="text-danger"></span>
                    </div>
                </fieldset>
                <button type="submit" class="btn-signup">Continue</button>
            </form>
        </div>
    </div>
</selection>

@section Scripts {
    @*<partial name="_ValidationScriptsPartial" />*@

    <script>const switchers = [...document.querySelectorAll('.switcher')]

        switchers.forEach(item => {
            item.addEventListener('click', function (event) {
                event.preventDefault(); // Prevent the default form submission
                switchers.forEach(item => item.parentElement.classList.remove('is-active'))
                this.parentElement.classList.add('is-active')
            })
        })

        document.querySelectorAll('.form-wrapper form').forEach(form => {
            form.addEventListener('submit', function (event) {
                const password = this.querySelector('input[name="Register.Password"]').value;
                const confirmPassword = this.querySelector('input[name="Register.ConfirmPassword"]').value;

                // Check if the passwords are both longer than 8 characters and contain a special character
                if (
                    password.length < 8 ||
                    confirmPassword.length < 8 ||
                    !hasSpecialCharacter(password) ||
                    !hasSpecialCharacter(confirmPassword)
                ) {
                    // One or both of the passwords are either too short or do not contain a special character
                    alert('Passwords must be at least 8 characters long and contain a special character.');
                    event.preventDefault();
                } else if (password !== confirmPassword) {
                    // Passwords do not match
                    alert('Passwords do not match.');
                    event.preventDefault();
                } else if (!this.checkValidity()) {
                    // The form is not valid, do not allow it to submit
                    event.preventDefault();
                } else {
                    return;
                }
            });

            // Function to check if a string contains a special character
            function hasSpecialCharacter(str) {
                return regex.test(str);
            }
        });

            //document.querySelectorAll('.form-wrapper form').forEach(form => {
            //    form.addEventListener('submit', function (event) {
            //        if (this.checkValidity()) {
            //            // The form is valid, allow it to submit
            //            return;
            //        } else {
            //            // The form is not valid, do not allow it to submit
            //            event.preventDefault();
            //        }
            //    });
            //});</script>
}

@section Styles {
    <style>
        *,
        *::before,
        *::after {
            box-sizing: border-box;
        }

        body {
            margin: 0;
            font-family: Roboto, -apple-system, 'Helvetica Neue', 'Segoe UI', Arial, sans-serif;
            background: #3b4465;
        }

        .forms-section {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .section-title {
            font-size: 32px;
            letter-spacing: 1px;
            color: #fff;
        }

        .forms {
            display: flex;
            align-items: flex-start;
            margin-top: 30px;
        }

        .form-wrapper {
            animation: hideLayer .3s ease-out forwards;
        }

            .form-wrapper.is-active {
                animation: showLayer .3s ease-in forwards;
            }

        @@keyframes showLayer {
            50% {
                z-index: 1;
            }

            100% {
                z-index: 1;
            }
        }

        @@keyframes hideLayer {
            0% {
                z-index: 1;
            }

            49.999% {
                z-index: 1;
            }
        }

        .switcher {
            position: relative;
            cursor: pointer;
            display: block;
            margin-right: auto;
            margin-left: auto;
            padding: 0;
            text-transform: uppercase;
            font-family: inherit;
            font-size: 16px;
            letter-spacing: .5px;
            color: #999;
            background-color: transparent;
            border: none;
            outline: none;
            transform: translateX(0);
            transition: all .3s ease-out;
        }

        .form-wrapper.is-active .switcher-login {
            color: #fff;
            transform: translateX(90px);
        }

        .form-wrapper.is-active .switcher-signup {
            color: #fff;
            transform: translateX(-90px);
        }

        .underline {
            position: absolute;
            bottom: -5px;
            left: 0;
            overflow: hidden;
            pointer-events: none;
            width: 100%;
            height: 2px;
        }

            .underline::before {
                content: '';
                position: absolute;
                top: 0;
                left: inherit;
                display: block;
                width: inherit;
                height: inherit;
                background-color: currentColor;
                transition: transform .2s ease-out;
            }

        .switcher-login .underline::before {
            transform: translateX(101%);
        }

        .switcher-signup .underline::before {
            transform: translateX(-101%);
        }

        .form-wrapper.is-active .underline::before {
            transform: translateX(0);
        }

        .form {
            overflow: hidden;
            min-width: 260px;
            margin-top: 50px;
            padding: 30px 25px;
            border-radius: 5px;
            transform-origin: top;
        }

        .form-login {
            animation: hideLogin .3s ease-out forwards;
        }

        .form-wrapper.is-active .form-login {
            animation: showLogin .3s ease-in forwards;
        }

        @@keyframes showLogin {
            0% {
                background: #d7e7f1;
                transform: translate(40%, 10px);
            }

            50% {
                transform: translate(0, 0);
            }

            100% {
                background-color: #fff;
                transform: translate(35%, -20px);
            }
        }

        @@keyframes hideLogin {
            0% {
                background-color: #fff;
                transform: translate(35%, -20px);
            }

            50% {
                transform: translate(0, 0);
            }

            100% {
                background: #d7e7f1;
                transform: translate(40%, 10px);
            }
        }

        .form-signup {
            animation: hideSignup .3s ease-out forwards;
        }

        .form-wrapper.is-active .form-signup {
            animation: showSignup .3s ease-in forwards;
        }

        @@keyframes showSignup {
            0% {
                background: #d7e7f1;
                transform: translate(-40%, 10px) scaleY(.8);
            }

            50% {
                transform: translate(0, 0) scaleY(.8);
            }

            100% {
                background-color: #fff;
                transform: translate(-35%, -20px) scaleY(1);
            }
        }

        @@keyframes hideSignup {
            0% {
                background-color: #fff;
                transform: translate(-35%, -20px) scaleY(1);
            }

            50% {
                transform: translate(0, 0) scaleY(.8);
            }

            100% {
                background: #d7e7f1;
                transform: translate(-40%, 10px) scaleY(.8);
            }
        }

        .form fieldset {
            position: relative;
            opacity: 0;
            margin: 0;
            padding: 0;
            border: 0;
            transition: all .3s ease-out;
        }

        .form-login fieldset {
            transform: translateX(-50%);
        }

        .form-signup fieldset {
            transform: translateX(50%);
        }

        .form-wrapper.is-active fieldset {
            opacity: 1;
            transform: translateX(0);
            transition: opacity .4s ease-in, transform .35s ease-in;
        }

        .form legend {
            position: absolute;
            overflow: hidden;
            width: 1px;
            height: 1px;
            clip: rect(0 0 0 0);
        }

        .input-block {
            margin-bottom: 20px;
        }

            .input-block label {
                font-size: 14px;
                color: #a1b4b4;
            }

            .input-block input {
                display: block;
                width: 100%;
                margin-top: 8px;
                padding-right: 15px;
                padding-left: 15px;
                font-size: 16px;
                line-height: 40px;
                color: #3b4465;
                background: #eef9fe;
                border: 1px solid #cddbef;
                border-radius: 2px;
            }

        .form [type='submit'] {
            opacity: 0;
            display: block;
            min-width: 120px;
            margin: 30px auto 10px;
            font-size: 18px;
            line-height: 40px;
            border-radius: 25px;
            border: none;
            transition: all .3s ease-out;
        }

        .form-wrapper.is-active .form [type='submit'] {
            opacity: 1;
            transform: translateX(0);
            transition: all .4s ease-in;
        }

        .btn-login {
            color: #fbfdff;
            background: #a7e245;
            transform: translateX(-30%);
        }

        .btn-signup {
            color: #a7e245;
            background: #fbfdff;
            box-shadow: inset 0 0 0 2px #a7e245;
            transform: translateX(30%);
        }
    </style>
}

