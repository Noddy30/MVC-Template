@model Template.Areas.Identity.Data.Viewmodels.Courses.GolfCourseViewModel
@{
    ViewData["Title"] = "Edit Course";
}
@{
    Layout = "~/Views/Shared/_BackendLayout.cshtml";
}

<div class="content-header">
    <div class="container-fluid">
        <form asp-action="EditCourse" method="post" class="card card-default needs-validation" id="form" enctype="multipart/form-data" novalidate>
            <div class="card-header">
                <a asp-action="Index" class=" btn btn-warning">Cancel</a>
                <button type="submit" id="btnSubmit" class="btn btn-dark">Save</button>
            </div>
            <div class="card-body">
                @Html.Partial("Partial/_Form.cshtml", Model)
            </div>
        </form>
    </div>
</div>

@section Scripts
{
    <script>
        var Table;
        $(document).ready(function () {
            // Initialize DataTable
            Table = $('#scoreCardTable').dataTable({
                "paging": true,
                "ordering": true,
                "searching": true,
                "info": true,
                "serverSide": true,
                "ajax": {
                    "url": '@Url.Action("Paginate", "Course")',
                    "type": "POST",
                    "data": function (d) {
                        d.DisplayStart = d.start;
                        d.DisplayLength = d.length;
                        d.SortCol_0 = d.order[0].column;
                        d.SortDir_0 = d.order[0].dir;
                        d.SearchFilter = d.search.value;
                    }
                },
                "columns": [
                    {
                        "data": "Name",
                        "bSortable": true
                    },
                    {
                        "data": "City",
                        "bSortable": true
                    },
                    {
                        "data": "Country",
                        "bSortable": true
                    },
                    {
                        "data": "Holes",
                        "bSortable": true
                    },
                    {
                        "data": "Id",
                        "bSearchable": false,
                        "bSortable": false,
                        'mRender': function (data) {
                            return '<a href="/Course/EditCourse/' + data + '" class="fa fa-eye" style="color: darkslategray; margin-left: 66px; margin-right: 23px;"></a>' +
                                    '<a href="/Course/Delete/' + data + '" class="fa fa-trash danger" style="color: indianred;"></a>';
                        }
                    },
                ]
            });
        });
        @*initUserRoleDropdown();
        async function initUserRoleDropdown() {
            debugger;
            var role = "@Model.Role";

            const url = '@Url.Action("GetAllRoles","User")';
            const { data } = await axios.get(url);

            const dropdown = $('#Role');
            dropdown.selectize({
                valueField: 'name',
                labelField: 'name',
                searchField: 'name',
                options: data,
                placeholder: 'Please select',
                items: [role],
                create: false
            });
        }*@

    </script>
}

